<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       		http://www.springframework.org/schema/beans/spring-beans.xsd
           	http://www.springframework.org/schema/aop 
    		http://www.springframework.org/schema/aop/spring-aop.xsd
           	http://www.springframework.org/schema/tx 
           	http://www.springframework.org/schema/tx/spring-tx.xsd
          	http://www.springframework.org/schema/context
          	http://www.springframework.org/schema/context/spring-context.xsd"
	default-lazy-init="false">
	
	
	<!--  隐式地向 Spring 容器注册-->
	<context:annotation-config/>
	<!-- 配置数据源 -->
	<bean id="dataSourceMyBatis" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
	    <property name="url" value="jdbc:mysql://turtlebone.top:3306/turtle?allowMultiQueries=true"/>
	    <property name="username" value="mysql"/>
	    <property name="password" value="mysql"/>
	    <property name="initialSize" value="10"/>
	    <property name="maxIdle" value="50"/>
	    <property name="maxTotal" value="50"/>
	    <property name="maxWaitMillis" value="10000"/>
	    <property name="removeAbandonedOnBorrow" value="true" />
	    <!-- <property name="removeAbandonedTimeout" value="5"/>-->
	    <!-- 如果数据源的defaultAutoCommit设置为True了，那么方法中如果自己捕获了异常，事务是不会回滚的，如果没有自己捕获异常则事务会回滚 -->
	    <property name="defaultAutoCommit" value="true"/>
	</bean>
	
	<!-- 配置mybatis sqlSession工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceMyBatis"/>
		<property name="mapperLocations" value="classpath*:com/**/entity/*.xml"/>
	</bean>
	
	<!-- 事务管理 --> 
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceMyBatis"/>
	</bean>
	
	<tx:advice id="txAdivce" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="SQLException"/>
			<tx:method name="udpate*" propagation="REQUIRED" rollback-for="SQLException"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="SQLException"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="pointcut" expression="execution(* com.*.*(..))" />
		<aop:advisor advice-ref="txAdivce" pointcut-ref="pointcut"/>
	</aop:config>

	
</beans>